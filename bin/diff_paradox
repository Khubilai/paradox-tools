#!/usr/bin/env ruby

require "tempfile"
require "pathname"
require "set"

require_relative "../lib/paradox_mod_file_serializer"
require_relative "../lib/paradox_mod_file"

class DiffParadox
  def initialize(a, b, diff_options)
    @a = Pathname(a)
    @b = Pathname(b)
    @diff_options = diff_options
    @diff_options = ["-w", "-U3"] if @diff_options.empty?
  end
  def files_in_a
    @files_in_a ||= Set[*@a.find.select(&:file?).map{|f| f.relative_path_from(@a)}]
  end
  def files_in_b
    @files_in_b ||= Set[*@b.find.select(&:file?).map{|f| f.relative_path_from(@b)}]
  end
  def only_in_a
    files_in_a - files_in_b
  end
  def only_in_b
    files_in_b - files_in_a
  end
  def files_in_both
    files_in_a & files_in_b
  end
  def diff_command!(path1, path2)
    system("diff", *@diff_options, path1.to_s, path2.to_s)
  end
  def diff_paradox!(path1, path2)
    mod1 = ParadoxModFile.new(path: path1).parse!
    mod2 = ParadoxModFile.new(path: path2).parse!
    if mod1 == mod2
      # OK
    else
      mod1out = ParadoxModFileSerializer.serialize(mod1)
      mod2out = ParadoxModFileSerializer.serialize(mod2)
      f1 = Tempfile.new(File.basename(path1))
      f1.write(mod1out)
      f1.close

      f2 = Tempfile.new(File.basename(path2))
      f2.write(mod2out)
      f2.close

      diff_command!(f1.path, f2.path)

      f1.unlink
      f2.unlink
    end
  end
  def diff_file!(path1, path2)
    if path1.extname == ".txt"
      diff_paradox! path1, path2
    else
      diff_command! path1, path2
    end
  end
  def run!
    files_in_both.each do |path|
      diff_file!(@a + path, @b + path)
    end
    only_in_a.each do |path|
      puts "Only in #{@a}: #{path}"
    end
    only_in_b.each do |path|
      puts "Only in #{@b}: #{path}"
    end
  end
end

unless ARGV.size >= 2
  STDERR.puts "Usage: #{$0} [--diff-options] <path1.txt> <path2.txt>"
  STDERR.puts "Diff options default to -w -U3 unless explicitly given."
  exit 1
end

*diff_options, path1, path2 = *ARGV

DiffParadox.new(path1, path2, diff_options).run!
