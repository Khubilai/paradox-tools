#!/usr/bin/env ruby

unless ARGV.size == 3
  STDERR.puts "Usage: #{$0} <file_in.eu4> <file_out.eu4> <cores_to_add.txt>"
  STDERR.puts "cores_to_add.txt needs to be in format generated by lost_cores"
  exit 1
end

save_in, save_out, cores_to_add_file = *ARGV

cores_to_add = {}
File.readlines(cores_to_add_file).map{|line|
  province, *cores = line.chomp.split("\t")
  cores_to_add[province] ||= []
  cores_to_add[province] += cores
}

save = File.read(save_in).encode("UTF-8", "ISO-8859-1")

save.gsub!(/^(-\d+)=\r\n\t\{\r\n(.*?)^\t\}\r\n/m) do |part|
  tag = $1
  existing_cores = part.scan(/\bcore="(\w+)"/).flatten || []
  cores = (cores_to_add[tag] || []) - existing_cores
  unless cores.empty?
    raise "Can't add cores" unless part.sub!(/(?=\t\ttrade=")/, cores.map{|c| %Q[\t\tcore="#{c}"\r\n]}.join)
  end
  part
end

File.open(save_out, 'w') do |fh|
  fh.write save.encode("ISO-8859-1", "UTF-8")
end
