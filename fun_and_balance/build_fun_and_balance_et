#!/usr/bin/env ruby

require_relative "../lib/paradox_mod_builder"
require_relative "./fun_and_balance_common"

class FunAndBalanceETModBuilder < ParadoxModBuilder
  include FunAndBalanceCommon

  def create_extra_unit_types(base_unit_name)
    # Other groups like sub_saharan exist in 1850s start, not sure if we want them too
    # ET has 14 tech groups, and roman_ak47 feels silly
    tech_groups = %W[western eastern ottoman muslim indian chinese]
    tech_groups.map do |tech_group|
      extra_unit_name = "zzz_#{tech_group}_#{base_unit_name}"
      unit = @game.parse("common/units/#{base_unit_name}.txt")
      unit.add! "unit_type", tech_group
      create_mod_file! "common/units/#{extra_unit_name}.txt", unit
      extra_unit_name
    end
  end

  def unit_needs_forking?(unit_name)
    unit = @game.parse("common/units/#{unit_name}.txt")
    unit["unit_type"].nil? and (unit["type"] == "infantry" or unit["type"] == "cavalry")
  end

  def create_extra_unit_types_for_mercs!
    # Sadly game engine does not support what ExtendedTimeline is trying to do

    patch_mod_file!("common/technologies/mil.txt") do |node|
      node.find_all("technology").each do |tech|
        forkable_units = tech.find_all("enable").select{|unit_name| unit_needs_forking?(unit_name)}

        forkable_units.each do |base_unit_name|
          create_extra_unit_types(base_unit_name).each do |extra_unit_name|
            tech.add!("enable", extra_unit_name)
            localization! "extra_units",
              "#{extra_unit_name}"      => @game.localization("#{base_unit_name}"),
              "#{extra_unit_name}DESCR" => @game.localization("#{base_unit_name}DESCR")
          end
        end
      end
    end
  end

  def build_mod_files!
    patch_defines_lua!([
      ["SCALED_TRUCE_YEARS", 10, 0],
      ["ANNEX_DIP_COST_PER_BASE_TAX", 10, 1],
      ["MAX_ACTIVE_POLICIES", 5, 10],
      ["POLICY_COST", 1, 0],
      ["FOREIGN_REBEL_SUPPORT", 4, 6],
      ["WESTERN_POWER_TICK_REDUCTION_FACTOR", 15, 1000000],
      ["ADVISOR_COST_INCREASE_PER_YEAR", 0.0005,  0.0005],
      ["CULTURE_GAIN_THRESHOLD", "0.20", "0.10"],
      ["POWER_MAX", 999, 1500],
      ["PS_BUILD_BUILDING", 10, 5],
      ["PS_MOVE_TRADE_PORT", 300, 100],
      ["PS_CHANGE_CULTURE", 40, 15],
      ["CLAIM_LOSE", 25, 50],
      ["CORE_LOSE", 50, 100],
      ["CORE_LOSE_CULTURE_GROUP", 150, 300],
      ["PROTECTORATE_TECH_THRESHOLD", 0.25, 5.0],
      ["PROTECTORATE_LOWER_BOUND", 0.5, 5.0],
      ["VASSAL_FABRICATE_CLAIMS", 1, 1],
      ["AI_BUY_PROVINCE_SUBJECT_MAX_OE", 50, 50],
      ["VASSALIZE_BASE_TAX_CAP", 40, 10000],
      ["GREAT_POWER_ALLIANCE_PENALTY", 50, 25],
      ["PEACE_TIME_EARLY_FACTOR", 0.75, 0.50],
      ["PEACE_WAR_EXHAUSTION_FACTOR", 1.0, 2.0],
      ["TECH_AHEAD_OF_TIME", 0.1, 0.05],
      ["RANDOM_LUCKY_BASE_WEIGHT", 100, 100] ,
      ["RANDOM_LUCKY_TAX_WEIGHT", 1, 0],
      ["RANDOM_LUCKY_TECH_WEIGHT", 1, 0],
      ["RANDOM_LUCKY_SLOW_TECH_PENALTY", 0.33, 1],
    ])

    patch_mod_file!("common/static_modifiers/00_static_modifiers.txt") do |node|
      unless node["base_values"]["global_missionary_strength"] == 0.02
        raise "Expect base missionary strength to equal 2%"
      end
      node["base_values"]["diplomatic_upkeep"] = 8
      node["war"] = PropertyList[] if node["war"] == []
      node["war"]["war_exhaustion_cost"] = 100
      node["emperor"]["diplomatic_upkeep"] = 2
      node["war_exhaustion"]["defensiveness"] = -0.02
      node["war_exhaustion"]["land_morale"] = -0.02
      node["war_exhaustion"]["naval_morale"] = -0.02
    end

    change_elections_to_eu3_style!
    dont_destroy_buildings_on_conquest!
    double_diplo_rel_limit_from_ideas!
    fix_opinions!
    fix_peasant_war!
    fix_wargoals!
    no_naval_attrition!
    reduce_religious_center_penalty!
    restore_hre_ia_on_prince_religion_change!
    remove_burgundy_inheritance!
    move_burgundy_capital_to_hre!
    smooth_oe_scaling!

    create_extra_unit_types_for_mercs!
  end
end

mb = FunAndBalanceETModBuilder.new(
  ParadoxGame.new(
    "source/eu4-1.8.0",
    "source/ExtendedTimeline 0.11.1/ExtendedTimeline"
  ),
  "output/fun_and_balance_et"
)
mb.build!
