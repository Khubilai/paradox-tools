#!/usr/bin/env ruby

require_relative "../lib/paradox_mod_builder"
require_relative "../lib/paradox_mod_file_serializer"

class FunAndBalanceModBuilder < ParadoxModBuilder
  def patch_mod_file!(path)
    patch_file!(path) do |content|
      orig_node = ParadoxModFile.new(string: content).parse!
      node = Marshal.load(Marshal.dump(orig_node)) # deep clone
      yield(node)
      ParadoxModFileSerializer.serialize(node, orig_node)
    end
  end

  def build_mod_files!
    patch_defines_lua!([
      ["SCALED_TRUCE_YEARS", 10, 0],
      ["ANNEX_DIP_COST_PER_BASE_TAX", 15, 1],
      ["MAX_ACTIVE_POLICIES", 5, 10],
      ["POLICY_COST", 1, 0],
      ["FOREIGN_REBEL_SUPPORT", 4, 6],
      ["WESTERN_POWER_TICK_REDUCTION_FACTOR", 15, 1000000],
      ["ADVISOR_COST_INCREASE_PER_YEAR", 0.01,  0.005],
      ["CULTURE_GAIN_THRESHOLD", "0.20", "0.10"],
      ["POWER_MAX", 999, 1500],
      ["PS_BUILD_BUILDING", 10, 5],
      ["PS_MOVE_TRADE_PORT", 300, 100],
      ["PS_CHANGE_CULTURE", 25, 10],
      ["CLAIM_LOSE", 25, 50],
      ["CORE_LOSE", 50, 100],
      ["CORE_LOSE_CULTURE_GROUP", 150, 300],
      ["CORE_TIME_SIZE_MODIFIER", 0.04, 0.0],
      ["PROTECTORATE_TECH_THRESHOLD", 0.5, 5.0],
      ["PROTECTORATE_LOWER_BOUND", 0.5, 5.0],
      ["VASSAL_FABRICATE_CLAIMS", 0, 1],
      ["AI_BUY_PROVINCE_SUBJECT_MAX_OE", 0, 50],
      ["VASSALIZE_BASE_TAX_CAP", 40, 10000],
    ])

    patch_mod_file!("events/GenericOnActionEvents.txt") do |node|
      node.find_all("country_event").each do |event|
        if event["option"]["add_republican_tradition"]
          event["option"]["add_republican_tradition"] = -0.03
        end
      end
    end

    patch_mod_file!("common/buildings/00_buildings.txt") do |node|
      node.each_value do |building|
        if building["spare_on_core"] == true
          building.delete "spare_on_core"
          building["destroy_on_conquest"] = false
        end
      end
    end

    patch_mod_file!("common/event_modifiers/00_event_modifiers.txt") do |node|
      unless node["religious_center"]["local_missionary_strength"] == -0.05
        raise "Expected important missionary center to have -5% missionary strength"
      end
      node["religious_center"]["local_missionary_strength"] = -0.02
    end

    @game.glob("common/policies/*.txt").each do |policy_file|
      patch_mod_file!(policy_file) do |node|
        node.each_value do |policy|
          policy["potential"].delete("has_idea_group")
        end
      end
    end

    @game.glob("common/ideas/*.txt").each do |ideas_file|
      patch_mod_file!(ideas_file) do |node|
          node.each do |group_name, idea_group|
          idea_group.each do |name, idea|
            next if %W[category trigger ai_will_do important free].include?(name)
            next if idea == [] # Empty idea
            if name == "siberian_frontier"
              idea.delete "colonists"
            end
            if idea["diplomatic_upkeep"] == 1
              idea["diplomatic_upkeep"] = 2
            end
          end
        end
      end
    end

    patch_mod_file!("common/static_modifiers/00_static_modifiers.txt") do |node|
      unless node["base_values"]["global_missionary_strength"] == 0.02
        raise "Expect base missionary strength to equal 2%"
      end
      node["base_values"]["diplomatic_upkeep"] = 8
      node["base_values"]["global_missionary_strength"] = 0.01
      node["base_values"]["global_heretic_missionary_strength"] = 0.01
      node["war"] = PropertyList[] if node["war"] == []
      node["war"]["war_exhaustion_cost"] = 100
      node["emperor"]["diplomatic_upkeep"] = 2
      node["inverse_religious_unity"]["global_revolt_risk"] = 5
      node["war_exhaustion"]["defensiveness"] = -0.02
      node["war_exhaustion"]["land_morale"] = -0.02
      node["war_exhaustion"]["naval_morale"] = -0.02
      node["positive_stability"]["global_missionary_strength"] = 0.007
      node["non_accepted_culture"]["local_revolt_risk"] = 4
    end

    patch_mod_file!("common/governments/00_governments.txt") do |node|
      node["steppe_horde"]["global_manpower_modifier"] = 1.0
      node["steppe_horde"]["land_forcelimit_modifier"] = 1.0
      node["steppe_horde"]["land_maintenance_modifier"] = -0.5
    end

    patch_mod_file!("common/on_actions/00_on_actions.txt") do |node|
      node["on_hre_member_true_religion"]["events"] = [903]
    end

    patch_mod_file!("common/opinion_modifiers/00_opinion_modifiers.txt") do |node|
      node["aggressive_expansion"]["yearly_decay"] = 4
      node["opinion_annex_vassal"]["min"] = -100
    end

    patch_mod_file!("missions/Diplomatic_Missions.txt") do |node|
      node["improve_relations_mission"]["effect"]["FROM"]["add_prestige"] = 10
      node["improve_relations_mission"]["effect"]["FROM"]["add_dip_power"] = 25
    end

    patch_mod_file!("decisions/RestoreByzantineEmpire.txt") do |node|
      node["country_decisions"]["restore_byzantine_empire"]["potential"].delete_if do |k,v|
        k == "NOT" and (v == PropertyList["tag", "HLR"] or v == PropertyList["tag", "TUR"])
      end
    end

    patch_mod_file!("common/technologies/dip.txt") do |node|
      node.find_all("technology").each_with_index do |tech,i|
        if i == 0
          tech["reduced_naval_attrition"] = true
        else
          tech.delete("reduced_naval_attrition")
        end
      end
    end

    patch_mod_file!("events/PeasantsWar.txt") do |node|
      node.find_all("country_event").each do |event|
        next unless event["id"] == "peasants_war.1"
        event["trigger"] # apply fixes here
      end
    end

    patch_mod_file!("common/wargoal_types/00_wargoal_types.txt") do |node| end
    patch_mod_file!("common/religions/00_religion.txt") do |node| end
    patch_mod_file!("decisions/ManchuDecisions.txt") do |node| end
    patch_mod_file!("decisions/MughalNation.txt") do |node| end
    patch_mod_file!("decisions/PersianNation.txt") do |node| end
    patch_mod_file!("decisions/Tribal.txt") do |node| end
    patch_mod_file!("events/Elections.txt") do |node| end
    # patch_mod_file!("events/FlavorBUR.txt") do |node| end
    patch_mod_file!("events/GenericOnActionEvents.txt") do |node| end
    patch_mod_file!("events/PurelyNasty.txt") do |node| end
    # patch_mod_file!("history/countries/BUR - Burgundy.txt") do |node| end

  end
end

game = ParadoxGame.new("fun_and_balance_baseline-1.7.3")
mb = FunAndBalanceModBuilder.new(
  game,
  "fun_and_balance-1.7.3"
)

mb.build!

mb.compare_with_reference!("fun_and_balance_reference-1.7.3")
