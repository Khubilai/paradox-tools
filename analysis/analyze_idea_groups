#!/usr/bin/env ruby

require "set"
require "pp"
require "pathname"
require_relative "../lib/paradox"
require_relative "bonus_scoring"

class AnalyzeIdeaGroups < ParadoxGame
  def each_idea_group
    glob("common/ideas/*").each do |path|
      parse(path).each do |idea_group|
        yield(idea_group)
      end
    end
  end

  def list_of_bonuses(idea_group)
    idea_group = idea_group.to_h
    idea_group.delete "category"
    idea_group.delete "trigger"
    idea_group.delete "ai_will_do"
    idea_group.delete "free"
    idea_group.delete "important"

    bonuses = BonusScoring.new
    idea_group.each do |_,idea|
      idea.each do |k,v|
        bonuses.send(k,v)
      end
    end
    bonuses
  end

  def analyze_idea_groups!
    seen = Set[]
    each_idea_group do |name, idea_group|
      bonuses = list_of_bonuses(idea_group)
      seen += bonuses.keys
      puts "%.2f %s" % [bonuses.score, localization(name)]
      # pp bonuses.to_h
      # pp idea_group
      # puts ""
    end
    # puts "#{seen.size} different bonuses"
  end
end

AnalyzeIdeaGroups.new(*ARGV).analyze_idea_groups!
